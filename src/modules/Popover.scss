@import './../scss/_common';

/*

  Popover

  Usage: Typically triggered by information icons 
    and error messages attached to fields

*/

.popover {
  display: block;
  position: absolute;
  background: $light-gray;
  left: 0;
  right: 0;
  bottom: calc(100% + 10px);
  min-width: 290px;
  &:before {
    content: ' ';
    position: absolute;
    width: 0;
    height: 0;
    left: 112px;
    bottom: -20px;
    border: 10px solid;
    -webkit-transform:rotate(360deg);
    border-color: $light-gray transparent transparent transparent;  
  }
  &.flush {
    left: 0;
    right: 0;
    width: 100%;
    bottom: calc(100% + 5px);
    &:before {
      border-color: $light-gray transparent transparent transparent;
      left: 112px;
      bottom: -20px;
    }
  }
  &.top {
    left: -8px;
    bottom: 30px;
    &:before {
      border-color: $light-gray transparent transparent transparent;
      left: 10px;
      bottom: -20px;
    }
  }
  &.right {
    min-width: 290px;
    left: 30px;
    top: calc(10px - 100%);
    &:before {
      border-color: transparent $light-gray transparent transparent;
      left: -20px;
      top: 46%;
      top: calc(50% - 10px);
    }
  }
  &.bottom {
    left: 0px;
    top: 0px;
    &:before {
      border-color: transparent transparent $light-gray;
      left: 30px;
      top: -20px;
    }
    & + .help-text {
      margin-top: auto;
    }
  }

  &-withicon {
    .popover__body {
      display: inline-block;
    }
  }

  &__body  {
    display: block;
    padding: 10px 30px 10px 10px;
    @include breakpoint(medium) {
      padding: 10px 10px 10px 10px;
    }
  }

  &__icon {
    width: 40px;
    height: 40px;
    float: left;
    margin-left: 10px;
    margin-right: 10px
  }

  &__title {
    font-size: rem-calc(16);
    font-weight: $global-weight-bold;
    margin-bottom: 0px;
  }

  &__text {
    font-size: rem-calc(16);
    font-weight: $global-weight-regular;
    margin-bottom: 0px;
  }

  &__close {
    position: absolute;
    top: 10px;
    right: 10px;
    display: block;
    cursor: pointer;
    &:hover {
      @include opacity(0.7);
    }
  }
  p:last-of-type {
    margin-bottom: 0px;
  }
}

/* 
loop through colours again and change before background
*/

/* USE CASE: ERROR */;

.error {
  color: $white;
  .popover-error {
      position: relative;
      top: -10px;
      background: $input-background-invalid;
      width: 100%;
      @include breakpoint(medium) {
        width: auto;
      }
      &:before {
        border-color: transparent transparent $input-background-invalid;
      }
  }
}


